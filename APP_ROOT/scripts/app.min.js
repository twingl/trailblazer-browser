(function() {
  window.Twingl = Ember.Application.create({
    rootElement: "#app",
    customEvents: {
      close: "webviewClose",
      consolemessage: "webviewConsoleMessage",
      contentload: "webviewContentLoad",
      dialog: "webviewClose",
      exit: "webviewExit",
      findupdate: "webviewFindUpdate",
      loadabort: "webviewLoadAbort",
      loadcommit: "webviewLoadCommit",
      loadredirect: "webviewLoadRedirect",
      loadstart: "webviewLoadStart",
      loadstop: "webviewLoadStop",
      newwindow: "webviewNewWindow",
      permissionrequest: "webviewPermissionRequest",
      responsive: "webviewResponsive",
      sizechanged: "webviewSizeChanged",
      unresponsive: "webviewUnresponsive",
      zoomchange: "webviewZoomChanged"
    }
  });

  Twingl.views || (Twingl.views = {});

}).call(this);

(function() {
  Twingl.IndexController = Ember.Controller.extend();

}).call(this);

(function() {
  Twingl.NavigationController = Ember.Controller.extend({

    /* 
     * This Controller is responsible for setting and clearing the necessary state
     * so we can mutate the tree correctly based on the events emitted by the
     * <webview>
     */
    needs: ['webview'],
    webview: Ember.computed.alias("controllers.webview"),
    url: '',
    loading: false,
    actions: {
      navigateUrl: function() {
        return this.get('webview').navigate(this.url);
      },
      navigateHistoryBack: function() {
        return this.get('webview').navigateBack();
      },
      navigateHistoryForward: function() {
        return this.get('webview').navigateForward();
      },
      navigateReload: function() {
        return this.get('webview').reload();
      },
      jumpToUrl: function(url) {
        return console.log("[STUB] jumpToUrl: " + url);
      }
    }
  });

}).call(this);

(function() {
  Twingl.WebviewController = Ember.Controller.extend({

    /*
     * This Controller is responsible for actioning navigation events and catching
     * the events emitted by the <webview>, filtering, and bubbling on appropriate
     * events to NavigationController so that it can manage the state effectively.
     */
    needs: ['navigation'],
    navigation: Ember.computed.alias("controllers.navigation"),
    url: '',
    navigate: function(url) {
      return this.set('url', url);
    },
    navigateForward: function() {
      return $('webview')[0].forward();
    },
    navigateBack: function() {
      return $('webview')[0].back();
    },
    reload: function() {
      return $('webview')[0].reload();
    },
    actions: {
      loadStart: function(e) {
        return this.get('navigation').set('loading', true);
      },
      loadStop: function(e) {
        return this.get('navigation').set('loading', false);
      },
      loadRedirect: function(e) {
        if (e.originalEvent.isTopLevel) {
          return this.get('navigation').set('url', e.originalEvent.url);
        }
      },
      loadCommit: function(e) {
        if (e.originalEvent.isTopLevel) {
          return this.get('navigation').set('url', e.originalEvent.url);
        }
      },
      newWindow: function(e) {
        return this.log(e);
      }
    },
    log: function(e) {
      return console.log(e.originalEvent.type, e.originalEvent);
    }
  });

}).call(this);

(function() {
  Twingl.HistoryBackButton = Ember.Component.extend({
    tagName: 'button',
    classNames: ['t-history-back', 't-nav-button'],
    action: "navigateHistoryBack",
    layoutName: "button",
    text: "Back",
    click: function() {
      return this.sendAction();
    }
  });

}).call(this);

(function() {
  Twingl.HistoryForwardButton = Ember.Component.extend({
    tagName: 'button',
    classNames: ['t-history-forward', 't-nav-button'],
    action: "navigateHistoryForward",
    layoutName: "button",
    text: "Forward",
    click: function() {
      return this.sendAction();
    }
  });

}).call(this);

(function() {
  Twingl.HistoryReloadButton = Ember.Component.extend({
    tagName: 'button',
    classNames: ['t-history-reload', 't-nav-button'],
    action: "navigateReload",
    layoutName: "button",
    text: "Reload",
    click: function() {
      return this.sendAction();
    }
  });

}).call(this);

(function() {
  Twingl.UrlSubmitButton = Ember.Component.extend({
    tagName: 'button',
    classNames: ['t-url-submit', 't-nav-button'],
    action: "navigateUrl",
    layoutName: "button",
    text: "Go",
    click: function() {
      return this.sendAction();
    }
  });

}).call(this);

(function() {
  Twingl.UrlTextField = Ember.TextField.extend({
    classNames: ['t-url-input'],
    placeholder: 'http://example.com',
    action: "navigateUrl",
    attributeBindings: ['value'],
    insertNewline: function() {
      return this.sendAction();
    }
  });

}).call(this);

(function() {
  Twingl.Webview = Ember.View.extend({
    tagName: 'webview',
    attributeBindings: ['src'],
    webviewContentLoad: function(evt) {
      return this.get('controller').send('contentLoaded', evt);
    },
    webviewLoadCommit: function(evt) {
      return this.get('controller').send('loadCommit', evt);
    },
    webviewLoadRedirect: function(evt) {
      return this.get('controller').send('loadRedirect', evt);
    },
    webviewLoadStart: function(evt) {
      return this.get('controller').send('loadStart', evt);
    },
    webviewLoadStop: function(evt) {
      return this.get('controller').send('loadStop', evt);
    },
    webviewNewWindow: function(evt) {
      return this.get('controller').send('newWindow', evt);
    }
  });

}).call(this);

(function() {
  Twingl.IndexRoute = Ember.Route.extend({
    renderTemplate: function() {
      this.render('browser/main', {
        outlet: 'main',
        controller: 'webview'
      });
      return this.render('navigation/browser', {
        outlet: 'navigation',
        controller: 'navigation'
      });
    }
  });

}).call(this);

(function() {


}).call(this);

(function() {


}).call(this);
